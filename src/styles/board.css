/* Make the dimension adjust to whatever the current state dimension is.
 * https://medium.com/@fionnachan/dynamic-number-of-rows-and-columns-with-css-grid-layout-and-css-variables-cb8e8381b6f2
 */
:root {
  --dimension: 6;
}

.grid-container {
  display: grid;
  justify-content: center;
  /* margin: auto; */
  padding-bottom: 15rem;
  padding-top: 2rem;
  grid-template-columns: repeat(var(--dimension), auto);
  grid-gap: 0.4rem;
  outline: none !important;
}

.grid-item {
  /* border: 1px solid black; */
  perspective: 1000px;
}

.grid-item img {
  height: 7rem;
  width: 7rem;
}

#digitOne {
  position: absolute;
  z-index: 1;
  margin-left: -2.5rem;
  margin-top: 0.6rem;
  height: 1.9rem;
  width: 1.7rem;
}

#digitTwo {
  position: absolute;
  z-index: 1;
  margin-left: -4.3rem;
  margin-top: 0.6rem;
  height: 1.9rem;
  width: 1.7rem;
}

#bombCount {
  position: absolute;
  z-index: 1;
  margin-left: -2.7rem;
  margin-top: 3.6rem;
  height: 2.2rem;
  width: 1.8rem;
}

.container {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}
.card {
  transition: transform 0.6s;
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  -o-transform-style: preserve-3d;
  transform-style: preserve-3d;
  position: relative;
  /* -webkit-transform-origin: 50% 50%; */
}

.front,
.back {
  height: 100%;
  width: 100%;
  position: absolute;
  backface-visibility: hidden;
}

.card .back {
  transform: rotateY(180deg);
}
/* this one toggles the flip.*/
.card.flipped {
  transform: rotateY(180deg);
  background: transparent;
}

.grid-item .container .card .front img:hover {
  /* content: url(../assets/tileHover.png); */
  cursor: pointer;
}

.grid-item .container .card .back img:hover {
  /* content: url(../assets/clickedTileHover.png); */
  cursor: pointer;
}
